spring.application.name=pedido-ms
server.port=0

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

spring.datasource.url=jdbc:postgresql://localhost:5432/sgpi
spring.datasource.username=${USER_DB}
spring.datasource.password=${PASSWORD_DB}
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql

management.endpoints.web.exposure.include=info,health

# Configura se o cliente (neste caso, o microserviço) deve se registrar no servidor Eureka.
# true: O serviço será registrado no servidor Eureka para que outros serviços possam encontrá-lo.
eureka.client.register-with-eureka=true
# Configura se o cliente deve buscar as informações do registro do Eureka (lista de serviços registrados).
# true: O cliente obtém periodicamente a lista de serviços registrados no servidor Eureka,
# permitindo que ele se comunique com outros serviços de maneira dinâmica.
eureka.client.fetch-registry=true
# Define o identificador único da instância no Eureka.
# O ID da instância é composto pelo nome do aplicativo (spring.application.name) e um número aleatório,
# garantindo que cada instância tenha um identificador único mesmo em ambientes com várias instâncias do mesmo serviço.
eureka.instance.instance-id=${spring.application.name}:${random.int}

resilience4j.circuitbreaker.default.slidingWindowSize=3
resilience4j.circuitbreaker.default.minimumNumberOfCalls=2
resilience4j.circuitbreaker.default.waitDurationInOpenState=50s

spring.rabbitmq.addresses=localhost:5672,localhost:5673,localhost:5674
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest